arr = [5, 1, 4, 2, 8]

n = len(arr)
for i in range(n - 1, 0, -1):   # 비교,정렬하는 횟수는 순회를 거듭할수록 감소해야 한다.
    for j in range(i):
        if arr[j] > arr[j + 1]:     # 오름차순 정렬이므로 크기가 큰 요소를 오른쪽으로 보낸다.
            arr[j], arr[j + 1] = arr[j + 1], arr[j]

버블 정렬의 경우 정렬을 거듭하면서 현재 순회중인 구간에서 가장 작은 요소(혹은 가장 큰 요소)를 배열의 끝에 위치시키고
그 요소를 다음 순회구간에서 제외함으로써 다음에 순회하는 배열의 구간이 점점 짧아지고 요소간 비교 횟수가 1씩 감소한다.
그러나 이 이중 반복문의 경우, i가 증가함에 따라 정렬의 횟수가 늘어나고 있고 비교의 시작점이 항상 배열의 0번째 인덱스에 있다.
따라서 j의 구간을 수정하지 않는다면, i의 범위와 비교 방식을 위와 같이 바꿈이 옳다.

또한, 정렬 조건을 만족했을 때 1차원 배열 arr의 j번째와 j+1번째 요소의 위치를 바꾸는 과정에서
각 인덱스에 요소를 할당하기 위한 '='가 아닌 비교 연산자 '=='를 사용하고 있어 문법적 오류가 발생하고 있다.